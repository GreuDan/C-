//5. Să se definească o clasă care implementează metodele:
//-int plus(int x, int y), care returnează suma valorilor primite la apelul metodei;
//-int minus(int x, int y), care returnează diferenta valorilor primite la apelul metodei;
//-int inmultit(int x, int y), care returnează produsul valorilor primite la apelul metodei;
//-float impartit(int x, int y), care returnează catul valorilor primite la apelul metodei;
//şi apoi să se scrie aplicaţia care utilizează această clasă.Considerati si cazul in care in cadrul
//clasei aveti atributele de tip int x si y, caz in care metodele nu vor mai avea parametrii.
//Observaţie: În cazul împărţirii, trebuie verificată validitatea operaţiei(împărţitor diferit de
//	zero).În cazul în care operaţia este imposibilă, trebuie afişat un mesaj de eroare.
#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string.h>
using namespace std;
class nr {
	int x;
	int y;
public:
	void getxy(int,int);
	int plus();
	int minus();
	int inmultire();
	float inpartire();
};
void nr::getxy(int n,int n1)
{
	x = n;
	y = n1;
}
int nr::plus() {
	return x + y;
}
int nr::minus() {
	return x - y;
}
int nr::inmultire() {
	return x * y;
}
float nr::inpartire() {
	if (y == 0) cout << "eroare";
	else return float(x*1.0 / y);
}
int main() {
	nr n1;
	int n,n3;
	cin >> n >> n3;
	n1.getxy(n, n3);
	cout << n1.plus() << endl;
	cout << n1.minus() << endl;
	cout << n1.inmultire() << endl;
	cout << n1.inpartire();
	return 0;
}